version: "3.9"

name: taiko-web-fork

services:
  mongo:
    image: mongo:7
    container_name: taiko-web-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    container_name: taiko-web-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: [ "redis-server", "--save", "", "--appendonly", "no" ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Ветка/URL форка — при желании можно поменять
        TAIKO_REPO_URL: "https://github.com/mopga/taiko-web-fork.git"
    container_name: taiko-web-fork
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # web увидит Mongo/Redis по именам сервисов в сети compose
      TAIKO_WEB_MONGO_HOST: "mongo:27017"
      TAIKO_WEB_REDIS_HOST: "redis"
      TAIKO_WEB_REDIS_PORT: "6379"
      TAIKO_WEB_REDIS_DB: "0"
      # basepath — если хочешь в подпуть, поставь, например, /taiko/
      BASEDIR: "${BASEDIR:-/}"
    ports:
      - "8000:8000"   # откроется http://localhost:8000
    volumes:
      - ./config/config.py:/app/config/config.py:ro
      - ./songs:/app/public/songs
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python -c \"import urllib.request, sys;\nimport urllib.error;\ntry:\n    resp = urllib.request.urlopen('http://localhost:8000/healthz', timeout=5)\n    sys.exit(0 if resp.status == 200 else 1)\nexcept urllib.error.URLError:\n    sys.exit(1)\"",
        ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 20s

volumes:
  mongo_data:
